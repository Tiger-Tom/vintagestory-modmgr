name: Package
on: workflow_dispatch
jobs:
    build-zipapp:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v3
          - uses: actions/setup-python@v4
            with:
                python-version: '3.11'
                cache: 'pip'
          - name: Create Runner File __main__.py
            uses: DamianReeves/write-file-action@v1.2
            with:
                path: __main__.py
                contents: 'import main;main.main()'
          - name: Add Files to Zips
            run: |
                zip -r -0 vintagestory-modmgr-gui.zip __main__.py main.py basemod.py modes/ gui/
                zip -r -0 vintagestory-modmgr.zip     __main__.py main.py basemod.py modes/
          - name: Convert Zips to PYZs
            run: |
                python3 -m zipapp -p /usr/bin/python3 vintagestory-modmgr-gui.zip -o vintagestory-modmgr-gui.pyz
                python3 -m zipapp -p /usr/bin/python3 vintagestory-modmgr.zip -o vintagestory-modmgr.pyz
          - name: Test applications
            run: |
                python3 vintagestory-modmgr-gui.pyz --help
                python3 vintagestory-modmgr.pyz --help
          - name: Upload Build Artifacts
            uses: actions/upload-artifact@v3
            with:
                name: ZipApp (cross-platform)
                path: vintagestory-modmgr*.pyz
    build-executable:
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest]
        runs-on: ${{ matrix.os }}
        steps:
          - uses: actions/checkout@v3
          - uses: actions/setup-python@v4
            with:
                python-version: '3.11'
          - name: Install PyInstaller
            run: 'pip install -U pyinstaller'
          - name: Install Requirements
            run: 'pip install -r requirements.txt'
          - name: Build application with PyInstaller
            run: |
                pyinstaller -yF --add-data gui/*${{ matrix.os == 'ubuntu-latest' && ':' || ';' }}gui -n vintagestory-modmgr${{ matrix.os == 'ubuntu-latest' && '' || '.exe' }} main.py
            env:
                PYTHONOPTIMIZE: 2
          - name: Test application
            run: |
                dist/vintagestory-modmgr${{ matrix.os == 'ubuntu-latest' && '' || '.exe' }} --help
          - name: Upload Build Artifact
            uses: actions/upload-artifact@v3
            with:
                name: vintagestory-modmgr${{ matrix.os == 'ubuntu-latest' && '' || '.exe' }}
                path: dist/vintagestory-modmgr${{ matrix.os == 'ubuntu-latest' && '' || '.exe' }}